/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.tarleton.welborn.duckcodeinterpreter;

import edu.tarleton.welborn.duckcodeinterpreter.levels.Level3;
import edu.tarleton.welborn.duckcodeinterpreter.lexer.Lexer;
import edu.tarleton.welborn.duckcodeinterpreter.lexer.LexerException;
import edu.tarleton.welborn.duckcodeinterpreter.parser.Parser;
import edu.tarleton.welborn.duckcodeinterpreter.parser.ParsingException;
import edu.tarleton.welborn.duckcodeinterpreter.parser.StatementBlockTree;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class DuckFrame extends javax.swing.JFrame {

    /**
     * Creates new form DuckFrame
     */
    final JFileChooser fileChooser = new JFileChooser();
    StatementBlockTree script = null;
    Game game;
    
    public DuckFrame(Game game) {
        this.game = game;
        initComponents();
        
        GamePanel.setGame(game);
        game.setFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ConsoleTextArea = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        StartButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();
        PauseButton = new javax.swing.JButton();
        AdvanceTickButton = new javax.swing.JButton();
        SimulationSpeedSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        LoadScriptButton = new javax.swing.JButton();
        LoadLevelButton = new javax.swing.JButton();
        GamePanel = new edu.tarleton.welborn.duckcodeinterpreter.GamePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ConsoleTextArea.setEditable(false);
        ConsoleTextArea.setColumns(20);
        ConsoleTextArea.setRows(5);
        jScrollPane1.setViewportView(ConsoleTextArea);

        jTextField1.setText("jTextField1");

        StartButton.setText("Start");
        StartButton.setToolTipText("");
        StartButton.setEnabled(false);
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });

        StopButton.setText("Stop");
        StopButton.setToolTipText("");
        StopButton.setEnabled(false);
        StopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopButtonActionPerformed(evt);
            }
        });

        PauseButton.setText("Pause");
        PauseButton.setEnabled(false);

        AdvanceTickButton.setText("Advance 1 Tick");
        AdvanceTickButton.setEnabled(false);

        SimulationSpeedSlider.setMaximum(2000);
        SimulationSpeedSlider.setMinimum(20);
        SimulationSpeedSlider.setValue(500);

        jLabel1.setText("Simulation Speed");

        LoadScriptButton.setText("Load Script");
        LoadScriptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadScriptButtonActionPerformed(evt);
            }
        });

        LoadLevelButton.setText("Load Level");
        LoadLevelButton.setEnabled(false);
        LoadLevelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadLevelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AdvanceTickButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(SimulationSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoadScriptButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoadLevelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StartButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StopButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PauseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AdvanceTickButton)
                .addGap(18, 18, 18)
                .addComponent(LoadScriptButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoadLevelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SimulationSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout GamePanelLayout = new javax.swing.GroupLayout(GamePanel);
        GamePanel.setLayout(GamePanelLayout);
        GamePanelLayout.setHorizontalGroup(
            GamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );
        GamePanelLayout.setVerticalGroup(
            GamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(jTextField1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadScriptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadScriptButtonActionPerformed
        int returnValue = fileChooser.showOpenDialog(this);
        if(returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            
            List<String> result = null;
            try (Stream<String> lines = Files.lines(file.toPath())) {
                result = lines.collect(Collectors.toList());
            } catch (IOException ex) {
                Logger.getLogger(DuckFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(result != null) {
                try {
                    game.setScript(Parser.getStatementBlockTreeFromTokens(Lexer.getTokensFromStringList(result)));
                    ConsoleTextArea.append("Script loaded successfully. ("+file.toString()+")\n");
                    StartButton.setEnabled(true);
                } catch (LexerException ex) {
                    ConsoleTextArea.append("Lexer exception while trying to read input script: "+ex.getMessage()+"\n");
                } catch (ParsingException ex) {
                    ConsoleTextArea.append("Parsing exception while trying to parse input script: "+ex.getMessage()+"\n");
                }
            }
        }
    }//GEN-LAST:event_LoadScriptButtonActionPerformed

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        StartButton.setEnabled(false);
        StopButton.setEnabled(true);
        game.stop();
        game.loadLevel(new Level3());
        game.start();
    }//GEN-LAST:event_StartButtonActionPerformed

    public void showMessageBox(String msg) {
        JOptionPane.showMessageDialog(this, msg);
    }
    
    private void LoadLevelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadLevelButtonActionPerformed
        int returnValue = fileChooser.showOpenDialog(this);
        if(returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            
            List<String> result = null;
            try (Stream<String> lines = Files.lines(file.toPath())) {
                result = lines.collect(Collectors.toList());
            } catch (IOException ex) {
                Logger.getLogger(DuckFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(result != null) {
                try {
                    if(game.loadLevel(Parser.getStatementBlockTreeFromTokens(Lexer.getTokensFromStringList(result)))) {
                        ConsoleTextArea.append("Level loaded successfully. ("+file.toString()+")\n");
                        LoadScriptButton.setEnabled(true);
                    } else {
                        ConsoleTextArea.append("Level could not load successfully. ("+file.toString()+")\n");
                    }
                } catch (LexerException ex) {
                    ConsoleTextArea.append("Lexer exception while trying to read input script: "+ex.getMessage()+"\n");
                } catch (ParsingException ex) {
                    ConsoleTextArea.append("Parsing exception while trying to parse input script: "+ex.getMessage()+"\n");
                }
            }
        }
    }//GEN-LAST:event_LoadLevelButtonActionPerformed

    private void StopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopButtonActionPerformed
        StopButton.setEnabled(false);
        PauseButton.setEnabled(false);
        StartButton.setEnabled(true);
        
        game.stop();
        game.loadLevel(new Level3());
    }//GEN-LAST:event_StopButtonActionPerformed

    public void scriptEnded() {
        StartButton.setEnabled(true);
        StopButton.setEnabled(false);
    }
    
    public void print(String msg) {
        ConsoleTextArea.append(msg);
    }
    
    public void println(String msg) {
        ConsoleTextArea.append(msg+"\n");
    }
    
    public long getSimulationSpeed() {
        return SimulationSpeedSlider.getValue();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdvanceTickButton;
    private javax.swing.JTextArea ConsoleTextArea;
    private edu.tarleton.welborn.duckcodeinterpreter.GamePanel GamePanel;
    private javax.swing.JButton LoadLevelButton;
    private javax.swing.JButton LoadScriptButton;
    private javax.swing.JButton PauseButton;
    private javax.swing.JSlider SimulationSpeedSlider;
    private javax.swing.JButton StartButton;
    private javax.swing.JButton StopButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
